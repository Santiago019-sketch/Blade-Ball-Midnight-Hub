-- Midnight Hub Enhanced Edition
local version = '3.0'

-- Core Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local CoreGui = game:GetService("CoreGui")

-- Variables
local local_player = Players.LocalPlayer or Players.PlayerAdded:Wait()
local camera = workspace.CurrentCamera
local Balls = workspace:WaitForChild("Balls", 9e9)

-- Configuration
getgenv().Settings = {
    AutoParry = {
        Enabled = true,
        PingBased = true,
        PingBasedOffset = 0,
        DistanceToParry = 0.5,
        BallSpeedCheck = true,
        UseMouseClick = false, -- False uses remote, true uses mouse click
        ShowRange = false
    },
    
    -- Visual Settings
    Visuals = {
        BallESP = false,
        PlayerESP = false
    }
}

-- Utility Functions
local Utilities = {
    VerifyBall = function(Ball)
        if typeof(Ball) == "Instance" and Ball:IsA("BasePart") and Ball:IsDescendantOf(Balls) and Ball:GetAttribute("realBall") == true then
            return true
        end
        return false
    end,
    
    IsTarget = function()
        return (local_player.Character and local_player.Character:FindFirstChild("Highlight"))
    end,
    
    FindBall = function()
        for _, ball in ipairs(Balls:GetChildren()) do
            if ball:GetAttribute("realBall") == true then
                return ball
            end
        end
        return nil
    end,
    
    Parry = function()
        if getgenv().Settings.AutoParry.UseMouseClick then
            VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
            VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, game, 0)
        else
            ReplicatedStorage:WaitForChild("Remotes").ParryButtonPress:Fire()
        end
    end,
    
    CalculateVelocity = function(ball)
        if not ball then return 0 end
        return ball.AssemblyLinearVelocity.Magnitude
    end
}

-- Enhanced Auto Parry System
local function InitializeAutoParry()
    RunService.PreRender:Connect(function()
        if not getgenv().Settings.AutoParry.Enabled then return end
        
        local ball = Utilities.FindBall()
        if not ball then return end
        
        local ballVelocity = Utilities.CalculateVelocity(ball)
        if getgenv().Settings.AutoParry.BallSpeedCheck and ballVelocity == 0 then return end
        
        local distance = local_player:DistanceFromCharacter(ball.Position)
        
        -- Ping-based calculation
        if getgenv().Settings.AutoParry.PingBased then
            local ping = game.Stats.Network.ServerStatsItem["Data Ping"]:GetValue() / 1000
            local pingOffset = ballVelocity * ping
            distance = distance - pingOffset - getgenv().Settings.AutoParry.PingBasedOffset
        end
        
        -- Parry timing calculation
        if Utilities.IsTarget() and (distance / ballVelocity) <= getgenv().Settings.AutoParry.DistanceToParry then
            Utilities.Parry()
        end
    end)
end

-- UI Library
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({
    Name = "ðŸŒ™ Midnight Hub " .. version,
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "MidnightConfig"
})

-- Create Combat Tab
local CombatTab = Window:MakeTab({Name = "Combat", Icon = "rbxassetid://4483345998"})
local VisualsTab = Window:MakeTab({Name = "Visuals", Icon = "rbxassetid://4483345998"})

-- Combat Settings
local AutoParrySection = CombatTab:AddSection({Name = "Auto Parry"})

AutoParrySection:AddToggle({
    Name = "Enable Auto Parry",
    Default = true,
    Flag = "AutoParryEnabled",
    Save = true,
    Callback = function(Value)
        getgenv().Settings.AutoParry.Enabled = Value
    end    
})

AutoParrySection:AddToggle({
    Name = "Ping Based",
    Default = true,
    Flag = "PingBased",
    Save = true,
    Callback = function(Value)
        getgenv().Settings.AutoParry.PingBased = Value
    end    
})

AutoParrySection:AddSlider({
    Name = "Parry Distance",
    Min = 0.1,
    Max = 1.0,
    Default = 0.5,
    Color = Color3.fromRGB(255,255,255),
    Increment = 0.05,
    ValueName = "threshold",
    Save = true,
    Callback = function(Value)
        getgenv().Settings.AutoParry.DistanceToParry = Value
    end    
})

AutoParrySection:AddSlider({
    Name = "Ping Offset",
    Min = -2,
    Max = 2,
    Default = 0,
    Increment = 0.1,
    Flag = "PingOffset",
    Save = true,
    Callback = function(Value)
        getgenv().Settings.AutoParry.PingBasedOffset = Value
    end
})

-- Visual Settings
local VisualsSection = VisualsTab:AddSection({Name = "ESP Settings"})

VisualsSection:AddToggle({
    Name = "Ball ESP",
    Default = false,
    Flag = "BallESP",
    Save = true,
    Callback = function(Value)
        getgenv().Settings.Visuals.BallESP = Value
    end    
})

VisualsSection:AddToggle({
    Name = "Player ESP",
    Default = false,
    Flag = "PlayerESP",
    Save = true,
    Callback = function(Value)
        getgenv().Settings.Visuals.PlayerESP = Value
    end    
})

-- Initialize Everything
InitializeAutoParry()
OrionLib:Init()

-- Success Notification
OrionLib:MakeNotification({
    Name = "Midnight Hub Enhanced",
    Content = "Successfully loaded! Press RightShift to toggle UI",
    Image = "rbxassetid://4483345998",
    Time = 5
})
